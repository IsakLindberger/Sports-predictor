[tool.poetry]
name = "sports-predictor"
version = "0.1.0"
description = "Production-ready system for predicting football match outcomes and simulating seasons"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "spx", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
pandas = "^2.1.0"
pyarrow = ">=13.0.0"
scikit-learn = "^1.3.0"
xgboost = ">=2.0.0"
scipy = "^1.11.0"
numpy = ">=1.24.0"
pydantic = "^2.4.0"
omegaconf = "^2.3.0"
hydra-core = "^1.3.0"
typer = {extras = ["all"], version = ">=0.9.0"}
loguru = "^0.7.0"
matplotlib = "^3.7.0"
seaborn = ">=0.12.0"
tqdm = "^4.66.0"
joblib = "^1.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.0"
black = "^23.9.0"
ruff = "^0.0.290"
isort = "^5.12.0"
mypy = "^1.6.0"
pre-commit = "^3.4.0"
jupyter = "^1.0.0"
ipykernel = "^6.25.0"

[tool.poetry.scripts]
spx = "spx.cli:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["spx"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "scipy.*",
    "matplotlib.*",
    "seaborn.*",
    "joblib.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/spx",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
