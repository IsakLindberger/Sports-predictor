# Template Configuration for New League/Sport
# Copy this file and modify for your specific league

# League identification
league: "your_league_code"        # e.g., "bundesliga", "laliga", "nfl"
adapter: "YourLeagueAdapter"      # Adapter class name

# Data configuration
data:
  raw_dir: "data/raw"             # Directory with raw data files
  interim_dir: "data/interim"     # Intermediate processing directory
  processed_dir: "data/processed" # Final processed data directory
  source_files:                   # List of data files to process
    - "your_league_2023_24.csv"
    - "your_league_2024_25.csv"

# Feature engineering parameters
features:
  lookback_games: 6               # Number of recent games for form features
  min_games_for_rating: 10        # Min games before using Elo ratings
  home_advantage: true            # Whether to include home advantage
  
  # Elo rating system parameters (adjust for your sport)
  elo_k_factor: 20.0              # Rating change scale (higher = more volatile)
  elo_base_rating: 1500.0         # Starting rating for new teams
  elo_home_boost: 30.0            # Home team advantage in Elo points
  elo_margin_multiplier: 0.1      # Impact of victory margin on rating change

# Model parameters
model:
  # XGBoost parameters for outcome prediction
  xgb_n_estimators: 100           # Number of trees
  xgb_learning_rate: 0.1          # Learning rate
  xgb_max_depth: 6                # Maximum tree depth
  xgb_min_child_weight: 1         # Minimum samples per leaf
  xgb_subsample: 0.8              # Sample ratio for training
  xgb_colsample_bytree: 0.8       # Feature sampling ratio
  
  # Calibration method
  calibration_method: "isotonic"   # 'isotonic' or 'sigmoid'
  
  # Scoreline model parameters (for sports with scores)
  max_goals: 6                    # Maximum goals/points to model explicitly
  dixon_coles_decay: 0.01         # Time decay for recent matches
  dixon_coles_rho: -0.1           # Correlation parameter

# Season simulation parameters
simulation:
  n_simulations: 20000            # Number of Monte Carlo simulations
  random_seed: 42                 # Random seed for reproducibility
  use_head_to_head: true          # Use head-to-head records for tie-breaking

# Training and evaluation periods
training:
  train_start_date: "2020-08-01"  # Start of training data
  train_end_date: "2024-05-31"    # End of training data
  test_start_date: "2024-08-01"   # Start of test data
  test_end_date: "2025-05-31"     # End of test data

# League-specific customizations
# Add your own parameters here as needed:
# 
# league_specific:
#   playoff_format: "single_elimination"  # For sports with playoffs
#   conference_structure: true            # For conferences/divisions
#   transfer_windows:                     # For mid-season changes
#     - start: "2024-01-01"
#       end: "2024-01-31"
#   
# Remember to:
# 1. Create your adapter class in src/spx/adapters/
# 2. Register it in src/spx/adapters/__init__.py
# 3. Update this config with your specific parameters
# 4. Add any sport-specific schema extensions if needed
